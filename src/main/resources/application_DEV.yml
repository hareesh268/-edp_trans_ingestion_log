
spring.profiles.active: DEV
logging.level.com.optum.exts.cdb.stream.SourceCSBStreams: INFO
##logging.level: INFO
#logging.level.com.optum.exts: ${logging.level}
#logging.level.org.apache.kafka: ${logging.level}
#logging.level.com.datastax.driver.core.policies: ${logging.level}
#logging.level.org.apache.kafka.streams.processor.internals.RecordCollectorImpl: OFF
#logging.level.org.apache.kafka.streams.processor.internals.AssignedTasks: OFF
#logging.level.com.example.demo.LogbackTestApplication: info
server.port: 8081
#server.port: 8080





spring:
  kafka:
    #auto.offset.reset: latest
    #auto.commit.interval.ms: 6000
    bootstrapServers: "ctc5hz1-07-s05.uhc.com:16016,ctc5hz1-07-s03.uhc.com:16016,ctc5hz1-07-s08.uhc.com:16016,ctc5hz1-07-s18.uhc.com:16016,ctc5hz1-07-s20.uhc.com:16016,ctc5hz1-07-s09.uhc.com:16016,ctc5hz1-07-s01.uhc.com:16016,ctc5hz1-07-s17.uhc.com:16016,ctc5hz1-07-s10.uhc.com:16016,ctc5hz1-07-s13.uhc.com:16016,ctc5hz1-07-s07.uhc.com:16016"
    #errors.tolerance : all
    #acks: all



    streams:
      applicationId: cdb-claas-alpha-edp_test
      #applicationId: cdb-postgresql-stream-devv2




      metricsRecordingLevel: INFO


      properties:

        security.protocol: "SSL"
        #ssl.keystore.location: /mapr/datalake/other/cdb/users/rgupta59/cert/cdb-extract-base.jks
        #ssl.truststore.location: /mapr/datalake/other/cdb/users/rgupta59/cert/pep-generic-truststore.jks
        #ssl.keystore.location: /Users/rgupta59/Documents/cdb-extract-base/cdb-extract-base.jks
        #ssl.truststore.location: /Users/rgupta59/Documents/cdb-extract-base/pep-generic-truststore.jks
        #ssl.keystore.location: C:\Work\jks-security\cdb-extract-base.jks
        #ssl.truststore.location: C:\Work\jks-security\pep-generic-truststore.jks
#        ssl.keystore.location: C:\Users\jjosep68\Documents\GitHub\repo\edp_trans_ingestion_log_newtopics\src\main\resources\cdb-alpha-edp.keystore.jks
#        ssl.truststore.location: C:\Users\jjosep68\Documents\GitHub\repo\edp_trans_ingestion_log_newtopics\src\main\resources\kaas-truststore.jks
        ssl.keystore.location: /tmp/keystore.jks
        ssl.truststore.location: /tmp/truststore.jks

        #ssl.truststore.location: C:\Work\jks-security\kaas-truststore.jks
        #ssl.keystore.location: C:\Work\jks-security\cdb-alpha-edp.keystore.jks

        #ssl.truststore.password: LGQAl1oXBMBKiH4uekyxow
        ssl.truststore.password: prmcert
        ssl.keystore.password: prmcert
        #ssl.keystore.password: KJLmyQ7tJRXifJ04eGSLxQ
        ssl.key.password: prmcert
        #ssl.key.password: KJLmyQ7tJRXifJ04eGSLxQ
        default.timestamp.extractor: org.apache.kafka.streams.processor.WallclockTimestampExtractor
        default.key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        #commitInterval: 1000
        #commit.interval.ms: 2500
        auto.offset.reset: earliest


      custom:
          "[batch.size]": 1000012
          "[default.api.timeout.ms]": 900000
          "[delivery.timeout.ms]": 2147483647
          "[heartbeat.interval.ms]": 6000
          "[max.block.ms]": 2147483647
          "[max.in.flight.requests.per.connection]": 1
          "[max.request.size]": 1000012
          "[request.timeout.ms]": 60000
          "[retries]": 2147483647
          "[session.timeout.ms]": 120000

    properties:
      #schema.registry.url: "http://kaas-test-schema-registry-a.optum.com" #http://127.0.0.1:8081
      schema.registry.url: "http://kaas-test-schema-registry-a.optum.com"
      specific.avro.reader: true
      num.stream.threads: 3

      #commitInterval: 1000
      #enable.auto.commit: true
      ##commitInterval: 1000
      ##auto.commit.interval.ms: 1000
      #enable.auto.commit: true
      #commit.interval.ms: 2500
      #batch.size: 1000012
      #default.api.timeout.ms: 900000
      #delivery.timeout.ms: 2147483647
      #heartbeat.interval.ms: 6000
      #max.block.ms: 2147483647
      #max.in.flight.requests.per.connection: 1
      #max.request.size: 1000012
      #request.timeout.ms: 60000
      #retries: 2147483647
      #session.timeout.ms: 120000
      #enable.auto.commit: true




streams:




  topicinfo:
      cnsmAuthRep: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_AUTH_REP
      cnsmCobPrimacy: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_COB_PRIMACY
      cnsmMdcrPrimacy: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_MDCR_PRIMACY
      covInfo: hcp-eligibility.ATTTEST.CDB.F6435DBS.COV_INFO
      custInfo: hcp-eligibility.ATTTEST.CDB.F6435DBS.CUST_INFO
      lCnsmSrch: hcp-eligibility.ATTTEST.CDB.F6435DBS.L_CNSM_SRCH
      LcovPrdtdt: hcp-eligibility.ATTTEST.CDB.F6435DBS.L_COV_PRDT_DT
      lCovPrdtPcp: hcp-eligibility.ATTTEST.CDB.F6435DBS.L_COV_PRDT_PCP
      mlCnsmAdr: hcp-eligibility.ATTTEST.CDB.F6435DBS.ML_CNSM_ADR
      mlCnsmXref: hcp-eligibility.ATTTEST.CDB.F6435DBS.ML_CNSM_XREF
      plnBenSet: hcp-eligibility.ATTTEST.CDB.F6435DBS.PLN_BEN_SET
      rxBenSetDet: hcp-eligibility.ATTTEST.CDB.F6435DBS.RX_BEN_SET_DET
      polInfo: hcp-eligibility.ATTTEST.CDB.F6435DBS.POL_INFO
      cdbFltr: hcp-eligibility.ATTTEST.CDB.F6435DBS.CDB_FLTR
      cdbSecurity: hcp-eligibility.ATTTEST.CDB.F6435SRS.CDB_SECURITY
      cnsmDtl: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_DTL
      cnsmMdcrEnrl: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_MDCR_ENRL
      cnsmMdcrPrisec: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_MDCR_PRISEC
      cnsmSts: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_STS
      lHltSrvDt: hcp-eligibility.ATTTEST.CDB.F6435DBS.L_HLT_SRV_DT
      lLfDisPrdtDt: hcp-eligibility.ATTTEST.CDB.F6435DBS.L_LF_DIS_PRDT_DT
      mlCnsmElctrAdr: hcp-eligibility.ATTTEST.CDB.F6435DBS.ML_CNSM_ELCTR_ADR
      mlCnsmTel: hcp-eligibility.ATTTEST.CDB.F6435DBS.ML_CNSM_TEL
      cnsmMdcrEntl: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_MDCR_ENTL
      cnsmOthrIns: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_OTHR_INS
      covLvlTyp: hcp-eligibility.ATTTEST.CDB.F6435DBS.COV_LVL_TYP
      cnsmCal: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_CAL
      cnsmCobPrisec: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_COB_PRISEC
      cnsmCovCustDefnFld: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_COV_CUST_DEFN_FLD
      cnsmCustDefnFld: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_CUST_DEFN_FLD
      cnsmEft: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_EFT
      cnsmMdcrElig: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_MDCR_ELIG
      cnsmPrxstCond: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_PRXST_COND
      cnsmSlryBasDedOop: hcp-eligibility.ATTTEST.CDB.F6435DBS.CNSM_SLRY_BAS_DED_OOP
      plnBenSetDet: hcp-eligibility.ATTTEST.CDB.F6435DBS.PLN_BEN_SET_DET

      prdtTrig: kaas.cdb-elig.adptn_memcnt.ctc.test.l_cov_prdt_dt_trig.v2
      disTrig: kaas.cdb-elig.adptn_memcnt.ctc.test.l_lf_dis_prdt_dt_trig.v2
      hltSrvTrig: kaas.cdb-elig.adptn_memcnt.ctc.test.l_hlt_srv_dt_trig.v2


input:

  postgresUrl: jdbc:postgresql://dbvrd28250:5432/postgres?stringtype=unspecified
  postgresUser: postgres
  postgresPwd: postgres
  schema: systest
  physicalDelValue: X
  emptyJsonValue: '{}'
  srcSysId: CDBSTRM
  runningSet: env.get("$groupName")
  queryLookup:
    ingestionLog: INSERT INTO <SCHEMA>.long_term_ingestion_log_fix(table_name, row_key, ingestion_ts, row_sts_cd, cdc_flag, cdc_ts, hst_val, new_val,row_tmstmp) VALUES (?,?,?,?,?,?,?,?,?) ON CONFLICT (table_name, row_key, ingestion_ts) DO UPDATE SET row_sts_cd = ?, cdc_flag = ?, cdc_ts = ?, hst_val = ?, new_val = ? , row_tmstmp = ? where <SCHEMA>.long_term_ingestion_log_fix.row_tmstmp <= ?

---
#spring.datasource.driver-class-name: org.postgresql.Driver
#spring.datasource.url: jdbc:postgresql://dbvrd28250:6543/postgres?prepareThreshold=0
spring.datasource.dataSourceClassName: org.postgresql.ds.PGSimpleDataSourcer
spring.datasource.url: jdbc:postgresql://dbvrd28250:5432/postgres?stringtype=unspecified
spring.datasource.username: postgres
spring.datasource.password: postgres
spring.datasource.type: com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimumIdle: 10
spring.datasource.hikari.maximumPoolSize: 40
spring.datasource.hikari.idleTimeout: 30000
spring.datasource.hikari.poolName: CSPHikariCP
spring.datasource.hikari.maxLifetime: 200000
spring.datasource.hikari.connectionTimeout: 1500000
spring.datasource.hikari.leakDetectionThreshold: 2100000


logging.splunk.url: https://npe-dmz-hec-splunk.optum.com
logging.splunk.token: b93459f8-f941-4307-80e2-6afad0c0544b
logging.splunk.index: cba_CDB_BDPaaS
logging.splunk.host: http://k8s-prod-ctc-aci.optum.com:31142
logging.splunk.source: DEV