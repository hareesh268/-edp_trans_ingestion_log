spring.profiles.active: local
logging.level.com.optum.exts.cdb.stream.SourceCSBStreams: INFO
#logging.level: INFO
#logging.level.com.optum.exts: ${logging.level}
#logging.level.org.apache.kafka: ${logging.level}
#logging.level.com.datastax.driver.core.policies: ${logging.level}
#logging.level.org.apache.kafka.streams.processor.internals.RecordCollectorImpl: OFF
#logging.level.org.apache.kafka.streams.processor.internals.AssignedTasks: OFF



#logging.level.com.example.demo.LogbackTestApplication: info
#logging.pattern.console: %d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.pattern.file: %d{yyyy-MM-dd HH:mm:ss} - %msg%n [%thread] %-5level %logger{36} - %msg%n
#logging.path: logs
##server.port: 8183





spring:
  kafka:
    #auto.offset.reset: latest
    #auto.commit.interval.ms: 6000
    bootstrapServers: kaas-prod-elr-a.optum.com:443
    #errors.tolerance : all
    #acks: all



    streams:
#      applicationId: cdb-postgresql-stream-attunitydev-raw
      applicationId: edp-att-prod-test-k8-test1123456





      metricsRecordingLevel: INFO


      properties:

        security.protocol: "SSL"
        ssl.keystore.location: /tmp/prodcert/edp-att-prod.keystore.jks
        ssl.truststore.location: /tmp/prodcert/kaas-truststore.jks
        ssl.truststore.password: BEnyonNYK8o8t/Ln6+AG2g
        ssl.keystore.password: YmKU74lKJ1tB1yZfpMzf4A
        ssl.key.password: YmKU74lKJ1tB1yZfpMzf4A
        default.timestamp.extractor: org.apache.kafka.streams.processor.WallclockTimestampExtractor
        default.key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        #auto.offset.reset: earliest
        auto.offset.reset: latest


      custom:
        "[batch.size]": 1000012
        "[default.api.timeout.ms]": 900000
        "[delivery.timeout.ms]": 2147483647
        "[heartbeat.interval.ms]": 6000
        "[max.block.ms]": 2147483647
        "[max.in.flight.requests.per.connection]": 1
        "[max.request.size]": 1000012
        "[request.timeout.ms]": 60000
        "[retries]": 2147483647
        "[session.timeout.ms]": 120000

    properties:
      #schema.registry.url: "http://kaas-test-schema-registry-a.optum.com" #http://127.0.0.1:8081
      schema.registry.url: "http://kaas-prod-schema-registry-a.optum.com"
      specific.avro.reader: true
      num.stream.threads: 3


streams:

  topicinfo:
        cdbFltr:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CDB_FLTR
        cdbSecurity:  kaas.prod.elr.ATTPROD.CDB.F6435SRP.CDB_SECURITY
        cnsmDtl:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_DTL
        cnsmMdcrEnrl:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_MDCR_ENRL
        cnsmMdcrPrisec:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_MDCR_PRISEC
        cnsmSts:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_STS
        lCnsmSrch:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.L_CNSM_SRCH
        LcovPrdtdt:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.L_COV_PRDT_DT
        lCovPrdtPcp:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.L_COV_PRDT_PCP
        lHltSrvDt:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.L_HLT_SRV_DT
        lLfDisPrdtDt:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.L_LF_DIS_PRDT_DT
        mlCnsmAdr:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.ML_CNSM_ADR
        mlCnsmElctrAdr:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.ML_CNSM_ELCTR_ADR
        mlCnsmTel:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.ML_CNSM_TEL
        cnsmMdcrEntl:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_MDCR_ENTL
        cnsmOthrIns:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_OTHR_INS
        covLvlTyp:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.COV_LVL_TYP
        mlCnsmXref:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.ML_CNSM_XREF
        cnsmAuthRep:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_AUTH_REP
        cnsmCal:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_CAL
        cnsmCobPrisec:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_COB_PRISEC
        cnsmCobPrimacy:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_COB_PRIMACY
        cnsmCovCustDefnFld:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_COV_CUST_DEFN_FLD
        cnsmCustDefnFld:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_CUST_DEFN_FLD
        cnsmEft:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_EFT
        cnsmMdcrElig:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_MDCR_ELIG
        cnsmMdcrPrimacy:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_MDCR_PRIMACY
        cnsmPrxstCond:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_PRXST_COND
        cnsmSlryBasDedOop:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CNSM_SLRY_BAS_DED_OOP
        covInfo:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.COV_INFO
        custInfo:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.CUST_INFO
        plnBenSet:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.PLN_BEN_SET
        plnBenSetDet:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.PLN_BEN_SET_DET
        polInfo:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.POL_INFO
        rxBenSetDet:  kaas.prod.elr.ATTPROD.CDB.F6435DBP.RX_BEN_SET_DET




input:

  postgresUrl: jdbc:postgresql://dbvrd28250:5432/postgres?stringtype=unspecified
  postgresUser: postgres
  postgresPwd: postgres
  schema: f6435dbpedp
  physicalDelValue: X
  emptyJsonValue: '{}'
  srcSysId: CDBSTRM
  runningSet: env.get("$groupName")
  queryLookup:
    ingestionLog: INSERT INTO <SCHEMA>.long_term_ingestion_log(table_name, row_key, ingestion_ts, row_sts_cd, cdc_flag, cdc_ts, hst_val, new_val,row_tmstmp) VALUES (?,?,?,?,?,?,?::json,?::json,?) ON CONFLICT (table_name, row_key, ingestion_ts) DO UPDATE SET row_sts_cd = ?, cdc_flag = ?, cdc_ts = ?, hst_val = ?::json, new_val = ?::json , row_tmstmp = ? where <SCHEMA>.long_term_ingestion_log.row_tmstmp <= ?

---


spring.datasource.driver-class-name: org.postgresql.Driver
spring.datasource.url: ${CON_URL}?ApplicationName=attunity
spring.datasource.username: ${SECRETS_EDP_USER}
spring.datasource.password: ${SECRETS_EDP_USER_PASSWD}
spring.datasource.type: com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimumIdle: ${MIN_CON_POOL}
spring.datasource.hikari.maximumPoolSize: ${MAX_CON_POOL}
spring.datasource.hikari.idleTimeout: 30000
spring.datasource.hikari.poolName: CSPHikariCP
spring.datasource.hikari.maxLifetime: 2000000
spring.datasource.hikari.connectionTimeout: 1500000
spring.datasource.hikari.leakDetectionThreshold: 2100000

logging.splunk.url: https://phi-dmz-hec-splunk.optum.com
logging.splunk.token: ${SECRETS_SPLUNK_TOKEN}
logging.splunk.index: cba_CDB_BDPaaS
logging.splunk.host: http://k8s-prod-ctc-aci.optum.com:31142


#spring.profiles: local
logging.level: INFO
